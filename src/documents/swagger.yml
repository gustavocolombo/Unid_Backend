swagger: '2.0'
info:
  description: |
    Reference API for the challenge database proposed by UNID
  version: 1.0.0
  title: UNID backend
  termsOfService: http://swagger.io/terms/
  contact:
    email: gusttavocolombo@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: users
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
- name: tools
  description: Operations about tools
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
# schemes:
# - http
paths:
  /tools:
    post:
      tags:
      - tools
      summary: Add a new tools to the APi, this operation require JWT Token
      operationId: addTool
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Tool object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Tools'
      responses:
        405:
          description: Invalid input
          
    get:
      tags:
      - tools
      summary: This operation returns a vector with all tools created within the API, , this operation require JWT Token
      operationId: getTools
      produces:
      - application/json
      - application/xml
      responses:
        200:
          description: successful operation, vector objects
        400:
          description: No tools was found in database
    
  /tools/{tag}:
    get:
      tags:
      - tools
      summary: Get tool by tag name, , this operation require JWT Token
      operationId: getToolByTagName
      produces:
      - application/json
      - application/xml
      parameters:
      - name: tag
        in: path
        description: Operation performed when the user wants to filter which tools have similar tags
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Tools'
        404:
          description: No tool with this tag was found
        
  /tools/{toolId}:
    delete:
      tags:
      - tools
      summary: Deletes a tool in database, , this operation require JWT Token
      operationId: deleteTool
      produces:
      - application/json
      - application/xml
      parameters:
      - name: jwt_token
        in: header
        required: true
        type: string
      - name: toolId
        in: path
        description: Tool id to delete
        required: true
        type: string
        format: string
      responses:
        200:
          description: Successfully deleted tool
        400:
          description: This operation cannot be performed
        404:
          description: JWT is missing
    
  /users:
    post:
      tags:
      - users
      summary: Create user
      description: This operation can be done without the logged-in user
      operationId: createUser
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /session:
    post:
      tags:
      - users
      summary: This operation creates a login token for the user to perform the other actions in the API
      operationId: authenticateUser
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Email and Password 
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/User'
      responses:
        200:
          description: successful operation
        400: 
          description: email/password combination wrong
 
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: http://petstore.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:pets: modify pets in your account
      read:pets: read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
      password:
        type: string
    xml:
      name: User
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Tools:
    type: object
    required:
    - title
    - link
    - description
    - tags
    properties:
      id:
        type: string
        format: string
      title:
        type: string
        example: notion
      description:
        type: string
        example: fake description for notion
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
        - available
        - pending
        - sold
    xml:
      name: Pet
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
# basePath: http://localhost:3000
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /gustavocolombo/Unid_Backend_1.0/1.0.0